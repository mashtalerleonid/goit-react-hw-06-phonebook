{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/ContactListItem/ContactListItem.styled.jsx","components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList.jsx","App.styled.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["Form","styled","form","Label","label","ContactForm","addContact","useState","name","setName","number","setNumber","handleChange","e","target","value","onSubmit","preventDefault","onChange","autoComplete","type","pattern","title","required","Input","input","Filter","filterBlur","filterChange","filter","onBlur","Item","li","ContactListItem","id","onDeleteContact","onClick","List","ul","ContactList","list","map","item","Container","div","App","key","defultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","contacts","setContacts","setFilter","filteredContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","uuidv4","isAdded","forEach","alert","prev","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7767148c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  width: 350px;\n  padding: 5px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Label } from \"./ContactForm.styled\";\n\nexport default function ContactForm({ addContact }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    addContact(name, number);\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <input\n          value={name}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <input\n          value={number}\n          onChange={handleChange}\n          autoComplete=\"off\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n\nContactForm.propTypes = {\n  addContact: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n`;\n","import PropTypes from \"prop-types\";\nimport { Label, Input } from \"./Filter.styled\";\n\nexport default function Filter({ filterBlur, filterChange, filter }) {\n  return (\n    <Label>\n      Find contacts by name:\n      <Input value={filter} onChange={filterChange} onBlur={filterBlur} />\n    </Label>\n  );\n}\n\nFilter.propTypes = {\n  filterChange: PropTypes.func,\n  filter: PropTypes.string.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 5px;\n  width: 450px;\n  font-size: 20px;\n  border: 2px solid tomato;\n  border-radius: 5px;\n  box-shadow: 0px 2px 3px 3px rgba(34, 60, 80, 0.4);\n`;\n","import PropTypes from \"prop-types\";\nimport { Item } from \"./ContactListItem.styled\";\n\nexport default function ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <Item>\n      {name}: {number}\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </Item>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import PropTypes from \"prop-types\";\nimport ContactListItem from \"components/Contacts/ContactListItem/\";\nimport { List } from \"./ContactList.styled\";\n\nexport default function ContactList({ list, onDeleteContact }) {\n  return (\n    <List>\n      {list.map((item) => {\n        const { id, name, number } = item;\n\n        return (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nContactList.propTypes = {\n  onDeleteContact: PropTypes.func,\n  list: PropTypes.arrayOf(PropTypes.shape).isRequired,\n};\n","import styled from \"@emotion/styled\";\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { v4 as uuidv4 } from \"uuid\";\nimport { useState } from \"react\";\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/Contacts/ContactList\";\nimport { Container } from \"./App.styled\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\n  const [filter, setFilter] = useState(\"\");\n\n  const addContact = (name, number) => {\n    const contact = { id: uuidv4(), name, number };\n\n    let isAdded = false;\n\n    contacts.forEach((contact) => {\n      if (contact.name === name) {\n        isAdded = true;\n        return;\n      }\n    });\n\n    if (isAdded) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts((prev) => [...prev, contact]);\n    }\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((prev) => prev.filter((contact) => contact.id !== contactId));\n  };\n\n  const filterChange = (e) => {\n    const { value } = e.target;\n    setFilter(value);\n  };\n\n  const filterBlur = (e) => {\n    setFilter(\"\");\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm addContact={addContact} />\n      <h2>Contacts</h2>\n      <Filter\n        filterBlur={filterBlur}\n        filterChange={filterChange}\n        filter={filter}\n      />\n      <ContactList list={filteredContacts} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\nexport default function useLocalStorage(key, defultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}