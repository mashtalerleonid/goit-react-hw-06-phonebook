{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","redux/phonebook/phonebook-actions.js","components/Filter/Filter.jsx","components/Contacts/ContactListItem/ContactListItem.styled.jsx","components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList.jsx","App.styled.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["Form","styled","form","Label","label","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","reset","onSubmit","this","onChange","autoComplete","type","pattern","title","required","Component","Input","input","filterChange","createAction","filterBlur","deleteContact","addContact","payload","id","uuidv4","connect","filter","contacts","dispatch","onFilterChange","event","actions","onFilterBlur","onBlur","Item","li","ContactListItem","onDeleteContact","onClick","List","ul","getFilteredItems","items","item","toLowerCase","includes","contactId","map","Container","div","contact","itemsReducer","createReducer","action","isAdded","forEach","alert","filterReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d641f64d.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  width: 350px;\n  padding: 5px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n","import React, { Component } from \"react\";\nimport { Form, Label } from \"./ContactForm.styled\";\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <input\n            value={this.state.name}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <input\n            value={this.state.number}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n`;\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const filterChange = createAction(\"phonebook/filterChange\");\r\n\r\nexport const filterBlur = createAction(\"phonebook/filterBlur\");\r\n\r\nexport const deleteContact = createAction(\"phonebook/deleteContact\");\r\n\r\nexport const addContact = createAction(\r\n  \"phonebook/addContact\",\r\n  ({ name, number }) => ({\r\n    payload: { id: uuidv4(), name, number },\r\n  })\r\n);\r\n\r\n// ----------------------\r\n\r\n// export const addContact = ({ name, number }) => ({\r\n//   type: actionTypes.ADD_CONTACT,\r\n//   payload: { id: uuidv4(), name, number },\r\n// });\r\n\r\n// export const deleteContact = (contactId) => ({\r\n//   type: actionTypes.DELETE_CONTACT,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const filterChange = (text) => ({\r\n//   type: actionTypes.FILTER_CHANGE,\r\n//   payload: text,\r\n// });\r\n\r\n// export const filterBlur = (text) => ({\r\n//   type: actionTypes.FILTER_BLUR,\r\n//   payload: text,\r\n// });\r\n","import { Label, Input } from \"./Filter.styled\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\n\nfunction Filter({ onFilterBlur, onFilterChange, filter }) {\n  return (\n    <Label>\n      Find contacts by name:\n      <Input value={filter} onChange={onFilterChange} onBlur={onFilterBlur} />\n    </Label>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFilterChange: (event) =>\n      dispatch(actions.filterChange(event.target.value)),\n    onFilterBlur: () => dispatch(actions.filterBlur(\"\")),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 5px;\n  width: 450px;\n  font-size: 20px;\n  border: 2px solid tomato;\n  border-radius: 5px;\n  box-shadow: 0px 2px 3px 3px rgba(34, 60, 80, 0.4);\n`;\n","import { Item } from \"./ContactListItem.styled\";\n\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <Item>\n      {name}: {number}\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </Item>\n  );\n}\n\nexport default ContactListItem;\n","import styled from \"@emotion/styled\";\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import ContactListItem from \"components/Contacts/ContactListItem/\";\nimport { List } from \"./ContactList.styled\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../redux/phonebook/phonebook-actions\";\n\nfunction ContactList({ items, onDeleteContact }) {\n  return (\n    <List>\n      {items.map((item) => {\n        const { id, name, number } = item;\n\n        return (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nconst getFilteredItems = (items, filter) => {\n  return items.filter((item) =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\n  return {\n    items: getFilteredItems(items, filter),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDeleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from \"@emotion/styled\";\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/Contacts/ContactList\";\nimport { Container } from \"./App.styled\";\n\nimport * as actions from \"./redux/phonebook/phonebook-actions\";\nimport { connect } from \"react-redux\";\n\nfunction App({ onAddContact }) {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact={onAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddContact: (contact) => dispatch(actions.addContact(contact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport * as actions from \"../phonebook/phonebook-actions\";\r\n\r\nconst itemsReducer = createReducer([], {\r\n  [actions.addContact]: (state, action) => {\r\n    let isAdded = false;\r\n\r\n    state.forEach((item) => {\r\n      if (item.name === action.payload.name) {\r\n        isAdded = true;\r\n        return;\r\n      }\r\n    });\r\n\r\n    if (isAdded) {\r\n      alert(`${action.payload.name} is already in contacts`);\r\n      return state;\r\n    }\r\n\r\n    return [...state, action.payload];\r\n  },\r\n  [actions.deleteContact]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [actions.filterChange]: (_, action) => action.payload,\r\n  [actions.filterBlur]: (_, action) => action.payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\n// ------------------------\r\n\r\n// const filterReducer = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.FILTER_CHANGE:\r\n//       return payload;\r\n\r\n//     case types.FILTER_BLUR:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const itemsReducer = (state = initialItems, { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD_CONTACT:\r\n//       let isAdded = false;\r\n\r\n//       state.forEach((item) => {\r\n//         if (item.name === payload.name) {\r\n//           isAdded = true;\r\n//           return;\r\n//         }\r\n//       });\r\n\r\n//       if (isAdded) {\r\n//         alert(`${payload.name} is already in contacts`);\r\n//         return state;\r\n//       }\r\n\r\n//       return [...state, payload];\r\n\r\n//     case types.DELETE_CONTACT:\r\n//       return state.filter((item) => item.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","// import { combineReducers } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\n// const rootReducer = combineReducers({\r\n//   contacts: persistReducer(persistConfig, phonebookReducer),\r\n// });\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default { store, persistor };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { store, persistor } from \"./redux/store\";\n// import store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}