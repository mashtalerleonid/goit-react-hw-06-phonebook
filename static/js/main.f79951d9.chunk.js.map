{"version":3,"sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","redux/phonebook/phonebook-types.js","components/Filter/Filter.jsx","redux/phonebook/phonebook-actions.js","components/Contacts/ContactListItem/ContactListItem.styled.jsx","components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/ContactList/ContactList.styled.jsx","components/Contacts/ContactList/ContactList.jsx","App.styled.js","redux/phonebook/phonebook-reducer.js","redux/store.js","App.js","index.js"],"names":["Form","styled","form","Label","label","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","reset","onSubmit","this","onChange","autoComplete","type","pattern","title","required","Component","Input","input","connect","filter","contacts","dispatch","onFilterChange","event","text","actionTypes","payload","onFilterBlur","onBlur","Item","li","ContactListItem","id","onDeleteContact","onClick","List","ul","getFilteredItems","items","item","toLowerCase","includes","contactId","actions","map","Container","div","initialItems","combineReducers","newContact","uuidv4","isAdded","forEach","alert","rootReducer","phonebookReducer","store","createStore","composeWithDevTools","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f79951d9.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  width: 350px;\n  padding: 5px;\n  border: 2px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 60%;\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n","import React, { Component } from \"react\";\nimport { Form, Label } from \"./ContactForm.styled\";\n\nimport { connect } from \"react-redux\";\n\nclass ContactForm extends Component {\n  state = { name: \"\", number: \"\" };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label>\n          Name\n          <input\n            value={this.state.name}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n\n        <Label>\n          Number\n          <input\n            value={this.state.number}\n            onChange={this.handleChange}\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n\n// ContactForm.propTypes = {\n//   addContact: PropTypes.func,\n// };\n\n// import { handleNameChange, handleNumberChange } from \"../../redux/actions\";\n\n// function ContactForm({ name, number, onNameChange, onNumberChange }) {\n//   return (\n//     <Form>\n//       {/* <Form onSubmit={this.handleSubmit}> */}\n//       <Label>\n//         {name}\n//         <input\n//           // value={name}\n//           onChange={onNameChange}\n//           autoComplete=\"off\"\n//           type=\"text\"\n//           name=\"name\"\n//           pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//           title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//           required\n//         />\n//       </Label>\n\n//       <Label>\n//         {number}\n//         <input\n//           // value={number}\n//           onChange={onNumberChange}\n//           autoComplete=\"off\"\n//           type=\"tel\"\n//           name=\"number\"\n//           pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//           title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//           required\n//         />\n//       </Label>\n\n//       {/* <button type=\"submit\">Add contact</button> */}\n//     </Form>\n//   );\n// }\n\n// const mapStateToProps = (state) => {\n//   return {\n//     name: state.data.name,\n//     number: state.data.number,\n//   };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     onNameChange: (e) => dispatch(handleNameChange(e)),\n//     onNumberChange: (e) => dispatch(handleNumberChange(e)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import styled from \"@emotion/styled\";\n\nexport const Label = styled.label`\n  margin-bottom: 10px;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  margin-left: 5px;\n`;\n","const FILTER_CHANGE = \"phonebook/filterChange\";\r\nconst FILTER_BLUR = \"phonebook/filterBlur\";\r\nconst ADD_CONTACT = \"phonebook/addContact\";\r\nconst DELETE_CONTACT = \"phonebook/deleteContact\";\r\n\r\nexport default { FILTER_CHANGE, FILTER_BLUR, ADD_CONTACT, DELETE_CONTACT };\r\n","import { Label, Input } from \"./Filter.styled\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../redux/phonebook/phonebook-actions\";\n\nfunction Filter({ onFilterBlur, onFilterChange, filter }) {\n  return (\n    <Label>\n      Find contacts by name:\n      <Input value={filter} onChange={onFilterChange} onBlur={onFilterBlur} />\n    </Label>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.contacts.filter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFilterChange: (event) =>\n      dispatch(actions.filterChange(event.target.value)),\n    onFilterBlur: () => dispatch(actions.filterBlur()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import actionTypes from \"./phonebook-types\";\r\n\r\nexport const addContact = (contact) => ({\r\n  type: actionTypes.ADD_CONTACT,\r\n  payload: contact,\r\n});\r\n\r\nexport const deleteContact = (contactId) => ({\r\n  type: actionTypes.DELETE_CONTACT,\r\n  payload: contactId,\r\n});\r\n\r\nexport const filterChange = (text) => ({\r\n  type: actionTypes.FILTER_CHANGE,\r\n  payload: text,\r\n});\r\n\r\nexport const filterBlur = () => ({\r\n  type: actionTypes.FILTER_BLUR,\r\n  payload: \"\",\r\n});\r\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n  padding: 5px;\n  width: 450px;\n  font-size: 20px;\n  border: 2px solid tomato;\n  border-radius: 5px;\n  box-shadow: 0px 2px 3px 3px rgba(34, 60, 80, 0.4);\n`;\n","import { Item } from \"./ContactListItem.styled\";\n\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <Item>\n      {name}: {number}\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </Item>\n  );\n}\n\nexport default ContactListItem;\n","import styled from \"@emotion/styled\";\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import ContactListItem from \"components/Contacts/ContactListItem/\";\nimport { List } from \"./ContactList.styled\";\n\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../redux/phonebook/phonebook-actions\";\n\nfunction ContactList({ items, onDeleteContact }) {\n  return (\n    <List>\n      {items.map((item) => {\n        const { id, name, number } = item;\n\n        return (\n          <ContactListItem\n            key={id}\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        );\n      })}\n    </List>\n  );\n}\n\nconst getFilteredItems = (items, filter) => {\n  return items.filter((item) =>\n    item.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => {\n  return {\n    items: getFilteredItems(items, filter),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDeleteContact: (contactId) => dispatch(actions.deleteContact(contactId)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import styled from \"@emotion/styled\";\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { combineReducers } from \"redux\";\r\nimport actionTypes from \"./phonebook-types\";\r\n\r\nconst initialItems = [\r\n  { id: \"4545\", name: \"Leon\", number: \"158 44 77\" },\r\n  { id: \"7878\", name: \"Tom\", number: \"265 44 77\" },\r\n];\r\n\r\nconst filterReducer = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.FILTER_CHANGE:\r\n      return payload;\r\n\r\n    case actionTypes.FILTER_BLUR:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst itemsReducer = (state = initialItems, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD_CONTACT:\r\n      const newContact = {\r\n        id: uuidv4(),\r\n        name: payload.name,\r\n        number: payload.number,\r\n      };\r\n      let isAdded = false;\r\n\r\n      state.forEach((item) => {\r\n        if (item.name === newContact.name) {\r\n          isAdded = true;\r\n          return;\r\n        }\r\n      });\r\n\r\n      if (isAdded) {\r\n        alert(`${payload.name} is already in contacts`);\r\n        return state;\r\n      }\r\n\r\n      return [...state, newContact];\r\n\r\n    case actionTypes.DELETE_CONTACT:\r\n      return state.filter((item) => item.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items: itemsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport phonebookReducer from \"./phonebook/phonebook-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"components/ContactForm\";\nimport Filter from \"components/Filter\";\nimport ContactList from \"components/Contacts/ContactList\";\nimport { Container } from \"./App.styled\";\n\nimport store from \"./redux/store\";\n\nimport * as actions from \"./redux/phonebook/phonebook-actions\";\nimport { connect } from \"react-redux\";\n\n//   componentDidMount() {\n//     const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\nfunction App({ onAddContact }) {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact={onAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </Container>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     items: state.contacts.items,\n//     filter: state.contacts.filter,\n//   };\n// };\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddContact: (contact) => dispatch(actions.addContact(contact)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}